{"version":3,"sources":["meteor://ðŸ’»app/packages/yasinuslu_blaze-meta/packages/yasinuslu_blaze-meta.js"],"names":[],"mappingskG","file":"/packages/yasinuslu_blaze-meta.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// packages/yasinuslu:blaze-meta/lib/template.meta.js                                //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\n                                                                                     // 1\nTemplate.__checkName(\"MetaTags\");                                                    // 2\nTemplate[\"MetaTags\"] = new Template(\"Template.MetaTags\", (function() {               // 3\n  var view = this;                                                                   // 4\n  return Blaze.Each(function() {                                                     // 5\n    return Spacebars.call(view.lookup(\"tags\"));                                      // 6\n  }, function() {                                                                    // 7\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"_MetaTag\")), \"\\n  \" ]; // 8\n  });                                                                                // 9\n}));                                                                                 // 10\n                                                                                     // 11\n///////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// packages/yasinuslu:blaze-meta/lib/meta.js                                         //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\nMeta = {                                                                             // 1\n  options: {                                                                         // 2\n    title: \"Default Title\",                                                          // 3\n    suffix: \"Suffix for title\",                                                      // 4\n    separator: \" | \"                                                                 // 5\n  },                                                                                 // 6\n                                                                                     // 7\n  dict: new ReactiveDict(),                                                          // 8\n                                                                                     // 9\n  converters: {                                                                      // 10\n    title: function(title) {                                                         // 11\n      if (_.isFunction(title)) {                                                     // 12\n        title = title();                                                             // 13\n      }                                                                              // 14\n                                                                                     // 15\n      if (_.isEmpty(title)) {                                                        // 16\n        return Meta.options.title || \"\";                                             // 17\n      }                                                                              // 18\n                                                                                     // 19\n      if (!_.isEmpty(Meta.options.suffix)) {                                         // 20\n        title = title + Meta.options.separator + Meta.options.suffix;                // 21\n      }                                                                              // 22\n                                                                                     // 23\n      return title;                                                                  // 24\n    },                                                                               // 25\n                                                                                     // 26\n    meta: function(property, content) {                                              // 27\n      var options = _.isObject(property) ? property : {                              // 28\n        name: 'property',                                                            // 29\n        property: property,                                                          // 30\n        content: content                                                             // 31\n      };                                                                             // 32\n                                                                                     // 33\n      return options;                                                                // 34\n    }                                                                                // 35\n  },                                                                                 // 36\n                                                                                     // 37\n  init: function() {                                                                 // 38\n    Meta.setTitle(\"\");                                                               // 39\n  },                                                                                 // 40\n                                                                                     // 41\n  config: function(opts) {                                                           // 42\n    _.extend(Meta.options, opts.options);                                            // 43\n    _.extend(Meta.converters, opts.converters);                                      // 44\n  },                                                                                 // 45\n                                                                                     // 46\n  setVar: function(key, value) {                                                     // 47\n    Meta.dict.set(key, value);                                                       // 48\n  },                                                                                 // 49\n                                                                                     // 50\n  getVar: function(key) {                                                            // 51\n    return Meta.dict.get(key);                                                       // 52\n  },                                                                                 // 53\n                                                                                     // 54\n  set: function(property, content) {                                                 // 55\n    var properties = property;                                                       // 56\n    if (!_.isArray(property)) {                                                      // 57\n      properties = new Array(property);                                              // 58\n    }                                                                                // 59\n                                                                                     // 60\n    properties.forEach(function(property, key) {                                     // 61\n      var meta;                                                                      // 62\n      Tracker.nonreactive(function() {                                               // 63\n        meta = Meta.getVar(\"tag\") || {};                                             // 64\n      });                                                                            // 65\n      var m = Meta.converters.meta(property, content);                               // 66\n      meta[m.property] = m;                                                          // 67\n      Meta.setVar(\"tag\", meta);                                                      // 68\n    });                                                                              // 69\n                                                                                     // 70\n  },                                                                                 // 71\n                                                                                     // 72\n  unset: function(property) {                                                        // 73\n    var meta;                                                                        // 74\n    Tracker.nonreactive(function() {                                                 // 75\n      meta = Meta.getVar(\"tag\") || {};                                               // 76\n    });                                                                              // 77\n    var m = Meta.converters.meta(property);                                          // 78\n    delete meta[m.property];                                                         // 79\n    Meta.setVar(\"tag\", meta);                                                        // 80\n  },                                                                                 // 81\n                                                                                     // 82\n  unsetAll: function () {                                                            // 83\n    _.each(Meta.arr(), function (item) {                                             // 84\n      Meta.unset(item.property);                                                     // 85\n    });                                                                              // 86\n  },                                                                                 // 87\n                                                                                     // 88\n  setTitle: function(title) {                                                        // 89\n    Meta.setVar(\"title\", Meta.converters.title(title));                              // 90\n  },                                                                                 // 91\n                                                                                     // 92\n  getTitle: function() {                                                             // 93\n    return Meta.getVar(\"title\");                                                     // 94\n  },                                                                                 // 95\n                                                                                     // 96\n  arr: function() {                                                                  // 97\n    var meta = Meta.getVar(\"tag\");                                                   // 98\n    return _.toArray(meta);                                                          // 99\n  },                                                                                 // 100\n                                                                                     // 101\n  hash: function() {                                                                 // 102\n    return Meta.getVar(\"tag\");                                                       // 103\n  }                                                                                  // 104\n};                                                                                   // 105\n                                                                                     // 106\nTemplate.MetaTags.helpers({                                                          // 107\n                                                                                     // 108\n  tags: function() {                                                                 // 109\n    return Meta.arr();                                                               // 110\n  },                                                                                 // 111\n                                                                                     // 112\n  _MetaTag: function() {                                                             // 113\n    var attrs = {};                                                                  // 114\n    attrs[this.name] = this.property;                                                // 115\n    attrs.content = this.content;                                                    // 116\n    return Blaze.Template(function() {                                               // 117\n      return HTML.META(attrs);                                                       // 118\n    });                                                                              // 119\n  }                                                                                  // 120\n});                                                                                  // 121\n                                                                                     // 122\nMeteor.startup(function() {                                                          // 123\n  Meta.init();                                                                       // 124\n                                                                                     // 125\n  Blaze.render(Template.MetaTags, document.head);                                    // 126\n                                                                                     // 127\n  Tracker.autorun(function() {                                                       // 128\n    document.title = Meta.getTitle();                                                // 129\n  });                                                                                // 130\n});                                                                                  // 131\n                                                                                     // 132\n///////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}