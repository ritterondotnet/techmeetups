)]}'
{"version":3,"sources":["yasinuslu:blaze-meta/lib/meta.html","yasinuslu:blaze-meta/lib/meta.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,iC;AACA,sE;AACA,kB;AACA,gC;AACA,+C;AACA,iB;AACA,oF;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;ACTA,Q;AACA,Y;AACA,2B;AACA,8B;AACA,I;;AAEA,2B;;AAEA,e;AACA,4B;AACA,gC;AACA,wB;AACA,O;;AAEA,6B;AACA,wC;AACA,O;;AAEA,4C;AACA,oD;AACA,O;;AAEA,mB;AACA,M;;AAEA,uC;AACA,uD;AACA,yB;AACA,2B;AACA,wB;AACA,Q;;AAEA,qB;AACA,K;AACA,I;;AAEA,oB;AACA,sB;AACA,I;;AAEA,0B;AACA,yC;AACA,+C;AACA,I;;AAEA,gC;AACA,8B;AACA,I;;AAEA,yB;AACA,8B;AACA,I;;AAEA,oC;AACA,8B;AACA,+B;AACA,uC;AACA,K;;AAEA,gD;AACA,e;AACA,sC;AACA,wC;AACA,S;AACA,sD;AACA,2B;AACA,+B;AACA,O;;AAEA,I;;AAEA,6B;AACA,a;AACA,oC;AACA,sC;AACA,O;AACA,2C;AACA,4B;AACA,6B;AACA,I;;AAEA,6B;AACA,uD;AACA,I;;AAEA,wB;AACA,gC;AACA,I;;AAEA,mB;AACA,kC;AACA,2B;AACA,I;;AAEA,oB;AACA,8B;AACA,G;AACA,E;;AAEA,2B;;AAEA,oB;AACA,sB;AACA,I;;AAEA,wB;AACA,mB;AACA,qC;AACA,iC;AACA,sC;AACA,8B;AACA,O;AACA,G;AACA,G;;AAEA,2B;AACA,c;;AAEA,iD;;AAEA,8B;AACA,qC;AACA,K;AACA,G","file":"/packages/yasinuslu:blaze-meta.js","sourcesContent":["\nTemplate.__checkName(\"MetaTags\");\nTemplate[\"MetaTags\"] = new Template(\"Template.MetaTags\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"tags\"));\n  }, function() {\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"_MetaTag\")), \"\\n  \" ];\n  });\n}));\n","Meta = {\n  options: {\n    title: \"Default Title\",\n    suffix: \"Suffix for title\"\n  },\n\n  dict: new ReactiveDict(),\n\n  converters: {\n    title: function(title) {\n      if (_.isFunction(title)) {\n        title = title();\n      }\n\n      if (_.isEmpty(title)) {\n        return Meta.options.title || \"\";\n      }\n\n      if (!_.isEmpty(Meta.options.suffix)) {\n        title = title + \" | \" + Meta.options.suffix;\n      }\n\n      return title;\n    },\n\n    meta: function(property, content) {\n      var options = _.isObject(property) ? property : {\n        name: 'property',\n        property: property,\n        content: content\n      };\n\n      return options;\n    }\n  },\n\n  init: function() {\n    Meta.setTitle(\"\");\n  },\n\n  config: function(opts) {\n    _.extend(Meta.options, opts.options);\n    _.extend(Meta.converters, opts.converters);\n  },\n\n  setVar: function(key, value) {\n    Meta.dict.set(key, value);\n  },\n\n  getVar: function(key) {\n    return Meta.dict.get(key);\n  },\n\n  set: function(property, content) {\n    var properties = property;\n    if (!_.isArray(property)) {\n      properties = new Array(property);\n    }\n\n    properties.forEach(function(property, key) {\n      var meta;\n      Tracker.nonreactive(function() {\n        meta = Meta.getVar(\"tag\") || {};\n      });\n      var m = Meta.converters.meta(property, content);\n      meta[m.property] = m;\n      Meta.setVar(\"tag\", meta);\n    });\n\n  },\n\n  unset: function(property) {\n    var meta;\n    Tracker.nonreactive(function() {\n      meta = Meta.getVar(\"tag\") || {};\n    });\n    var m = Meta.converters.meta(property);\n    delete meta[m.property];\n    Meta.setVar(\"tag\", meta);\n  },\n\n  setTitle: function(title) {\n    Meta.setVar(\"title\", Meta.converters.title(title));\n  },\n\n  getTitle: function() {\n    return Meta.getVar(\"title\");\n  },\n\n  arr: function() {\n    var meta = Meta.getVar(\"tag\");\n    return _.toArray(meta);\n  },\n\n  hash: function() {\n    return Meta.getVar(\"tag\");\n  }\n};\n\nTemplate.MetaTags.helpers({\n\n  tags: function() {\n    return Meta.arr();\n  },\n\n  _MetaTag: function() {\n    var attrs = {};\n    attrs[this.name] = this.property;\n    attrs.content = this.content;\n    return Blaze.Template(function() {\n      return HTML.META(attrs);\n    });\n  }\n});\n\nMeteor.startup(function() {\n  Meta.init();\n\n  Blaze.render(Template.MetaTags, document.head);\n\n  Tracker.autorun(function() {\n    document.title = Meta.getTitle();\n  });\n});"]}